<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:property-placeholder location="classpath:db.properties"/>
    <!--组件扫描：用于注解-->
    <context:component-scan base-package="com.zr"/>

    <!--数据库连接池（德鲁伊连接池）-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig">
        <property name="idType" value="AUTO"/>
        <property name="tableUnderline" value="false"/>
    </bean>
    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
        <property name="dbConfig" ref="dbConfig"/>
    </bean>
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <!--   数据库连接     -->
        <property name="dataSource" ref="dataSource"/>
        <!--   加载mybatis配置文件     -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--   设置别名     -->
        <property name="typeAliasesPackage" value="com.zr.pojo"/>
        <property name="globalConfig" ref="globalConfig"/>
        <!--        &lt;!&ndash; 配置 MyBatisPlus 分页插件 &ndash;&gt;-->
        <!--        <property name="plugins">-->
        <!--            <array>-->
        <!--                <ref bean="mybatisPlusInterceptor"/>-->
        <!--            </array>-->
        <!--        </property>-->
    </bean>

    <!--    &lt;!&ndash; 配置MyBatisPlus分页插件 &ndash;&gt;-->
    <!--    <bean id="mybatisPlusInterceptor" class="com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor">-->
    <!--        <property name="interceptors">-->
    <!--            <list>-->
    <!--                <ref bean="paginationInnerInterceptor"/>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!--    <bean id="paginationInnerInterceptor"-->
    <!--          class="com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor">-->
    <!--        &lt;!&ndash; 指定数据库为MySQL &ndash;&gt;-->
    <!--        <constructor-arg name="dbType" value="MYSQL"/>-->
    <!--    </bean>-->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zr.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 事务处理配置 -->
    <bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--  事务处理注解驱动  -->
    <tx:annotation-driven transaction-manager="tm"/>

    <!--  配置自定义转换器  -->
    <bean id="conversionServiceFactoryBean" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.zr.utils.DataConvert"/>
            </set>
        </property>
    </bean>
    <!--  配置自定义类型转换器生效  -->
    <mvc:annotation-driven conversion-service="conversionServiceFactoryBean"/>

    <!--  reids数据源  -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--    最大空闲数    -->
        <property name="maxIdle" value="10"/>
        <!--    最大空连接数    -->
        <property name="maxTotal" value="50"/>
        <!--    最大等待时间    -->
        <property name="maxWaitMillis" value="2000"/>
        <!--    返回连接时，检测连接是否成功    -->
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!--  spring-redis连接池管理工厂  -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!--    IP地址    -->
        <property name="hostName" value="127.0.0.1"/>
        <!--    端口号    -->
        <property name="port" value="6379"/>
        <!--    连接池配置引用    -->
        <property name="poolConfig" ref="poolConfig"/>
        <!--   usePool:是否使用连接池     -->
        <property name="usePool" value="true"/>
    </bean>

    <!--  redis template definition  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>

        <!--    开启事务    -->
        <property name="enableTransactionSupport" value="true"/>
    </bean>
</beans>